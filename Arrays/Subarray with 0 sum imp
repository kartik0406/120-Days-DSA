// { Driver Code Starts
// A C++ program to find if there is a zero sum
// subarray
#include <bits/stdc++.h>
using namespace std;



 // } Driver Code Ends
class Solution{
    public:
    //Complete this function
    //Function to check whether there is a subarray present with 0-sum or not.
    bool subArrayExists(int arr[], int n)
    {
        int curr=0;
        int check[n];
        check[0]=1;
        for(int i=0;i<n;i++){
            curr+=arr[i];
             check[i]=curr;
            
        }
        sort(check,check+n);
        for(int i=0;i<n-1;i++){
            if(check[i+1]==check[i] || check[i]==0 || check[i+1]==0)
            return 1;
        }
        
        return 0;
  
        //Doing with Map     
        // int currSum=0;
        // unordered_map<int,int>mp;
        // mp[0]=1;
        // for(int i=0;i<n;i++){
        //     currSum+=arr[i];
        //     mp[currSum]++;
        // }
        // for(auto i:mp){
        //     if(i.second>1)
        //       return 1;
        // }
        // return 0;
    }
};

// { Driver Code Starts.
// Driver code
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++)
	    cin>>arr[i];
	    Solution obj;
	    	if (obj.subArrayExists(arr, n))
		cout << "Yes\n";
	else
		cout << "No\n";
	}
	return 0;
}  // } Driver Code Ends
